# %%


# %%
from core.Network import CountModel_cls, early_stop_callback
from core.data import AppleRoboFlowDataModule

import lightning as L

# %%
dm = AppleRoboFlowDataModule()
model = CountModel_cls()

trainer = L.Trainer(max_epochs=100, callbacks=[early_stop_callback])

# trainer.fit(model, dm)


# %%
dm.setup('fit')

# %%
batch = next(iter(dm.train_dataloader()))


# %%

# model(img)

# %%
batch[0].to('cuda:0')

# %%
model.to('cuda:0')
model.device

img = batch[0].to(model.device)

# %%
model(img)

# %%
trainer.test(model, datamodule=dm)


# %%
#script to get maximum count in the dataset
max_count = 0

for images, targets in dm.val_dataloader():
    max_count = max(max_count, targets['count'].max().item())

print(f"Maximum count in the dataset: {max_count}")


